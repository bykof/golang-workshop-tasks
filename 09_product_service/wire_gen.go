// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"os"
	"product_service/core/ports"
	"product_service/infrastructure/repositories"
	"product_service/interfaces/controllers"
)

// Injectors from wire.go:

func InitializeProductController() (*controllers.ProductController, error) {
	productRepositoryPort, err := NewProductRepository()
	if err != nil {
		return nil, err
	}
	productController := controllers.NewProductController(productRepositoryPort)
	return productController, nil
}

// wire.go:

func NewProductRepository() (ports.ProductRepositoryPort, error) {
	switch os.Getenv("REPOSITORY") {
	case "inmemory":
		return repositories.NewInMemoryProductRepository(), nil
	case "jsonfile":
		return repositories.NewJSONFileProductRepository("/Users/michaelbykovski/workspace/daimler/golang_workshop/product_service/products.json")
	default:
		return repositories.NewInMemoryProductRepository(), nil
	}
}
